<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<!-- 
		配置 bean
		class : bean 的全类名, 通过反射的方式在 IOC 容器中创建 Bean. 所以要求 Bean 中必须有无参构造器
		id : 标识容器中的 bean. id 唯一
	 -->
	<bean id="helloWorld" class="com.spring.ioc.xml.manual.HelloWorld">
		<property name="name" value="Cbw-beans"></property>
	</bean>
	
	<!-- 使用构造器注入属性值可以指定参数的位置和参数的类型, 以区分重载的构造器 -->
	<bean id="staff" class="com.spring.ioc.xml.manual.Staff">
		<constructor-arg value="sichuan" index="1"></constructor-arg>
		<!-- 如果字面值包含特殊字符, 可以使用 <![CDATA[]]> 包裹起来 -->
		<!-- 属性值也可以使用 value 直接点进行配置 -->
		<constructor-arg index="0">
			<value><![CDATA[<chenbowen>]]></value>
		</constructor-arg>
		<constructor-arg value="25" type="double"></constructor-arg>
	</bean>
	
	<bean id="company" class="com.spring.ioc.xml.manual.Company">
		<property name="name" value="yinzhijie"></property>
		<property name="address" value="shenzhen"></property>
		<!-- 可以使用 property 的 ref 属性建立 bean 之间的引用关系 -->
		<!-- 
		<property name="staff" ref="staff"></property>  
		-->
		<!-- 内部bean, 不能被外部引用. 只能在内部使用 -->
		<property name="staff">
			<bean class="com.spring.ioc.xml.manual.Staff">
				<constructor-arg value="chendong" index="0"></constructor-arg>
				<constructor-arg value="heilongjiang" index="1"></constructor-arg>
				<constructor-arg value="48" type="int"></constructor-arg>
			</bean>
		</property>
		<property name="equipments" ref="equipmentList">
			<!-- 使用 list 节点为 List 类型的属性赋值 -->
			<!--
			<list>
				<ref bean="equipment1"/>
				<ref bean="equipment2"/>
				<bean class="com.spring.ioc.xml.manual.Equipment">
					<property name="serialNumber" value="3"></property>
					<property name="belongs" value="wangruxia"></property>
				</bean>
			</list>
			 -->
		</property>
		<property name="equipmentMap">
			<!-- 使用 map 节点及 map 的 entry 子节点配置 Map 类型的成员变量 -->
			<map>
				<entry key="A" value-ref="equipment1"></entry>
				<entry key="B" value-ref="equipment2"></entry>
			</map>
		</property>
	</bean>
	
	<bean id="equipment1" class="com.spring.ioc.xml.manual.Equipment">
		<property name="serialNumber" value="1"></property>
		<property name="belongs" value="chenbowen"></property>
	</bean>
	
	<!-- 通过 p 命名空间为 bean 的属性赋值.  需要先导入 p 命名空间.  相对于传统的配置方式更加简洁.   -->
	<bean id="equipment2" class="com.spring.ioc.xml.manual.Equipment" p:serialNumber="2" p:belongs="chendong">
		<!--  
		<property name="serialNumber" value="2"></property>
		<property name="belongs" value="chendong"></property>
		-->
	</bean>
	
	<bean id="company1" class="com.spring.ioc.xml.manual.Company">
		<property name="name" value="yinzhijie"></property>
		<property name="address" value="shenzhen"></property>
		<!--  
		<property name="staff"><null/></property>
		-->
		<!-- 为级联属性赋值, 注意 : 属性需要先初始化后才能为级联属性赋值, 否则会有异常.  -->
		<!-- 和 Struts2 不同 -->
		<property name="staff" ref="staff"></property>
		<property name="staff.age" value="25"></property>
	</bean>
	
	<!-- 配置 properties 属性值 -->
	<bean id="properties" class="com.spring.ioc.xml.manual.DataSource">
		<property name="properties">
			<!-- 使用 props 和 prop 子节点为 properties 属性赋值 -->
			<props>
				<prop key="user">root</prop>
				<prop key="password">1234</prop>
				<prop key="jdbcUrl">jdbc:oracle:thin:@//localhost:1521/test</prop>
				<prop key="driverClass">Oracle.jdbc.driver.OracleDriver</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置单例的集合 bean, 以供多个 bean 进行引用.  需要导入 util 命名空间 -->
	<util:list id="equipmentList">
		<ref bean="equipment1"/>
		<ref bean="equipment2"/>
	</util:list>
	
</beans>
